%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (hdiv_v_prism.eps)
%%CreationDate: (2016-04-08T16:51:22+01:00)
%%BoundingBox: -0 -0 124 180
%%HiResBoundingBox: 0 0 124 180
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 124 180
userdict begin
DisplayImage
0 0
124 180
12
124 180
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFF0FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFC7FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFC
7FFFFFFFFFFFFFFFFFFFF0FFFFFFFFF83FFFFFFFFFFFFFFFFFFFF0FFFFFFFFF83FFFFFFFFFFFFF
FFFFFFF0FFFFFFFFF01FFFFFFFFFFFFFFFFFFFF0FFFFFFFFF01FFFFFFFFFFFFFFFFFFFF0FFFFFF
FFFC7FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFC7FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFC7FFFFFFFFF
FFFFFFFFFFF0FFFFFFFF047FFFFFFFFFFFFFFFFFFFF0FFFFFFFE007FFFFFFFFFFFFFFFFFFFF0FF
FFFFFC381FFFFFFFFFFFFFFFFFFFF0FFFFFFD8BC03FFFFFFFBFFFFFFFFFFF0FFFFFF81BC607FFF
FFF1FFFFFFFFFFF0FFFFFF83BC7C0FFFFFF1FFFFFFFFFFF0FFFFFF07BC7F81FFFFE0FFFFFFFFFF
F0FFFFFF07BC7FF03FFFE0FFFFFFFFFFF0FFFFFE03B83FFE07FFC07FFFFFFFFFF0FFFFFE0BB01F
FFC0FFC97FFFFFFFFFF0FFFFFC4FB01FFFF81FF9FFFFFFFFFFF0FFFFF8CFB01FFFFF03F9FFFFFF
FFFFF0FFFFF1CFB01FFFFFE079FFFFFFFFFFF0FFFFE3CFB01FFFFFFC09FFFFFFFFFFF0FFFFC7CF
B03FFFFFFF81FFFFFFFFFFF0FFFF8FCFBC7FFFFFFFF03FFFFFFFFFF0FFFF1FCFBFFFFFFFFFF807
FFFFFFFFF0FFFE3FCFBFFFFFFFFFF9C0FFFFFFFFF0FFFC7FCFBFFFFFFFFFF9F81FFFFFFFF0FFF8
FFCFBFFFFFFFFFF9FF03FFFFFFF0FFF1FFCFBFFFFFFFFFF9FFE07FFFFFF0FFE3FF07BFFFFFFFFF
E0FFFC0FFFFFF0FFC7FE03BFFFFFFFFFC07FFF81FFFFF0FF8FFE03BFFFFFFFFFC07FFFF03FFFF0
FF1FFE03BFFFFFFFFFC03FFFFE07FFF0FE3FFE03BFFFFFFFFFC07FFFFFC0FFF0FC7FFE03BFFFFF
FFFFC07FFFFFF81FF0F8FFFF07BFFFFFFFFFE0FFFFFFFF03F0F800000000000000000000000000
00F0F80000000000000000000000000000F0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBF
FFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFF
FFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFF
FFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFF
FFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FB
FFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFF
FFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFC
F0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBCFF
FFFFFFFFFFFFFFFFFCF0FBFFFFFFBC7FFFFFFFFFFFFFFFFFFCF0FBFFFFFFBC7FFFFFFFFFFFFFFF
FFFCF0FBFFFFFFB83FFFFFFFFFFFFFFFFFFCF0FBFFFFFFB83FFFFFFFFFFFFFFFFFFCF0FBFFFFFF
BEFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFF
FFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFF
FFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBEFFFFFFFFFFFFFFFFFFFCF0FBFFFFDFBEFFFFFFFF
FBFFFFFFFFFCF0FBFFFFCFBEFFFFFFFFF9FFFFFFFFFCF0FBFFFF8FBEFFFFFFFFF1FFFFFFFFFCF0
FBFFFF8FBEFFFFFFFFF1FFFFFFFFFCF0FBFFFF07BEFFFFFFFFE0FFFFFFFFFCF0FBFFFF07B83FFF
FFFFE0FFFFFFFFFCF0FBFFFFDFB01FFFFFFFFBFFFFFFFFFCF0FBFFFFDFB01FFFFFFFFBFFFFFFFF
FCF0FBFFFFDFB01FFFFFFFFBFFFFFFFFFCF0FBFFFFDFB01FFFFFFFFBFFFFFFFFFCF0FBFFFFDFB0
1FFFFFFFFBFFFFFFFFFCF0FBFFFFDFB83FFFFFFFFBFFFFFFFFFCF0FBFFFFDFBFFFFFFFFFFBFFFF
FFFFFCF0FBFFFFDFBFFFFFFFFFFBFFFFFFFFFCF0FBFFFFDFBFFFFFFFFFFBFFFFFFFFFCF0FBFFFF
DFBFFFFFFFFFFBFFFFFFFFFCF0FBFFFFDFBFFFFFFFFFFBFFFFFFFFFCF0FBFFFF8FBFFFFFFFFFF1
FFFFFFFFFCF0FBFFFF03BFFFFFFFFFE07FFFFFFFFCF0FBFFFE03BFFFFFFFFFC07FFFFFFFFCF0FB
FFFE03BFFFFFFFFFC07FFFFFFFFCF0FBFFFE03BFFFFFFFFFC03FFFFFFFFCF0FBFFFE03BFFFFFFF
FFC07FFFFFFFFCF0FBFFFE03BFFFFFFFFFC07FFFFFFFFCF0FBFFFF07BFFFFFFFFFE0FFFFFFFFFC
F0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFF
FFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFF
FFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFF
BFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFF
FFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFF
FFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFF
FFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0
FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFF
FFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFF
FCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBF
FFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFF
FFFFFCF0FBFFFFFFBFFFFFFFFFFFFFFFFFFFFCF0FBFFFFFF8FFFFFFFFFFFFFFFFFFFFCF0FBFFFF
FF01FFFFFFFFFFFFFFFFFFFCF0FBFFFFFE303FFFFFFFFFFFFFFFFFFCF0FBFFFFFC7E07FFFFFFFF
FFFFFFFFFCF0FBFFFFF8FFC0FFFFFFFFFFFFFFFFFCF0FBFFFFF1FFF81FFFFFFFFFFFFFFFFCF0FB
FFFFE3FFFF03FFFFFFFFFFFFFFFCF0FBFFFFC7FFFFE07FFFFFFFFFFFFFFCF0FBFFFF8FFC7FFC0F
FFFFFFFFFFFFFCF0FBFFFF1FF03FFF81FFFFFFFFFFFFFCF0FBFFFE3FF01FFFF03FFFFFFFFFFFFC
F0FBFFFC7FF01FFFFE07FFFFFFFFFFFCF0FBFFF8FFF01FFFFFC0FFFFFFFFFFFCF0FBFFF1FFF01F
FFFFF81FFFFFFFFFFCF0FBFFE3FFF01FFFFFFF03FFFFFFFFFCF0FBFFC7FFF83FFFFFFFE07FFFFF
FFFCF0FBFF8FFFFC7FFFFFFFFC0FFFFFFFFCF0FBFF1FFFFC7FFFFFFFFF81FFFFFFFCF0FBFE3FFF
FC7FFFFFFFFFF03FFFFFFCF0FBFC7FFFFC7FFFFFFFFFFE07FFFFFCF0FBF8FFFFFC7FFFFFFFFFFF
C0FFFFFCF0FBF1FF87FC7FFFFFFFF0FFF81FFFFCF0FBE3FE03FC7FFFFFFFC07FFF03FFFCF0FBC7
FE03FC7FFFFFFFC07FFFE07FFCF0FB8FFE03FC7FFFFFFFC03FFFFC0FFCF0FB1FFE03FC7FFFFFFF
C03FFFFF81FCF0FA3FFE03FC7FFFFFFFC07FFFFFF03CF0F87FFF03F01FFFFFFFE07FFFFFFE04F0
F80000000000000000000000000000F0F80000000000000000000000000000F0FFFFFFCFF83FFF
FFFFF9FFFFFFFFFFF0FFFFFFCFFC7FFFFFFFF9FFFFFFFFFFF0FFFFFFCFFC7FFFFFFFF9FFFFFFFF
FFF0FFFFFFCFFEFFFFFFFFF9FFFFFFFFFFF0FFFFFFCFFFFFFFFFFFF9FFFFFFFFFFF0FFFFFFCFFF
FFFFFFFFF9FFFFFFFFFFF0FFFFFFCFFFFFFFFFFFF9FFFFFFFFFFF0FFFFFFCFFFFFFFFFFFF9FFFF
FFFFFFF0FFFFFFCFFFFFFFFFFFF9FFFFFFFFFFF0FFFFFFCFFFFFFFFFFFF9FFFFFFFFFFF0FFFFFE
43FFFFFFFFFFC87FFFFFFFFFF0FFFFFF03FFFFFFFFFFE07FFFFFFFFFF0FFFFFF07FFFFFFFFFFE0
FFFFFFFFFFF0FFFFFF87FFFFFFFFFFF0FFFFFFFFFFF0FFFFFF8FFFFFFFFFFFF1FFFFFFFFFFF0FF
FFFFCFFFFFFFFFFFF9FFFFFFFFFFF0FFFFFFDFFFFFFFFFFFFBFFFFFFFFFFF0FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
F0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0
end
%%PageTrailer
%%Trailer
%%EOF
